!function(e){"use strict";var t=function(){function e(e,t){for(var o in t){var i=t[o];i.configurable=!0,i.value&&(i.writable=!0)}Object.defineProperties(e,t)}return function(t,o,i){return o&&e(t.prototype,o),i&&e(t,i),t}}(),o=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")};!function(e){var i=e.fn.emojipicker,n={className:".emojipicker",input:".form-control",toggle:".emojipicker-toggle",template:'<div class="popover emojipicker-popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>',emojiList:"/json/emojipicker.json",debug:!0,onShow:function(){},onShown:function(){},onHide:function(){},onHidden:function(){}},a=function(){function i(t,a){var l=this;if(o(l,i),a.className=a.className.replace(/\./g,""),l._config=e.extend({},n,a),l._$element=e("<div />"),l._$input=t instanceof jQuery?t:e(t),l._emojis={},l._header=null,l._content=null,l._$input){var c="emojipicker-"+(Math.floor(11*Math.random())+Math.floor(1e6*Math.random())).toString().trim(),r=l._$input.attr("style"),s=l._$input.attr("class"),f=l._$input.attr("placeholder");if(l._config.toggle instanceof jQuery)var u=l._config.toggle;else u=e('<a href="#" class="'+l._config.toggle.replace(/\./g,"")+'" role="button" data-toggle="popover">&#x263A;</a>');var p=e('<div class="emojipicker-content" contenteditable="true" />');if(l._$element.attr("id",c),p.attr("style",r).attr("data-placeholder",f).attr("class",s+" "+p.attr("class")).attr("data-type",l._$input.get(0).type),l._$input.attr("aria-describedby",c).attr("type","hidden").css("display","none"),l._$popover=u.popover({placement:"auto",html:!0,trigger:"focus",template:l._config.template,title:function(){return l._header?l._header:""},content:function(){return l._content}}).click(function(t){t.preventDefault(),e(t.target).popover("show")}),l._$element.addClass(a.className).append(p).append(u).append(u),l._$input.after(l._$element),l._$popover.on("show.bs.popover",function(t){return l._config.debug&&console.log("Call `onShow` method",l),l._$popover.not(t.target).popover("destroy"),e(".popover.popover-emojipicker").remove(),l._config.onShow.call(l)}).on("shown.bs.popover",function(){return l._config.debug&&console.log("Call `onShown` method",l),l._config.onShown.call(l)}).on("hide.bs.popover",function(){return l._config.debug&&console.log("Call `onHide` method",l),l._config.onHide.call(l)}).on("hidden.bs.popover",function(){return l._config.debug&&console.log("Call `onHidden` method",l),l._config.onHidden.call(l)}),e(document).on("click",function(t){l._$popover.each(function(){e(this).is(t.target)||0!==e(this).has(t.target).length||0!==e(".popover").has(t.target).length||(((e(this).popover("hide").data("bs.popover")||{}).inState||{}).click=!1)})}),a.emojiList){if("string"==typeof a.emojiList)try{l._emojis=JSON.parse(a.emojiList),l._config.debug&&console.log("Parsing emoji list from config",l._emojis)}catch(t){try{l._emojis=e.getJSON(a.emojiList,function(e){l._emojis=e,l._config.debug&&console.log("Parsing emoji list from json file",l._emojis)})}catch(e){l._config.debug&&console.error("Unable find json or parse",a.emojiList)}}else"object"==typeof a.emojiList&&(l._emojis=a.emojiList,l._config.debug&&console.log("Parsing emoji list from object",l._emojis));setTimeout(function(){if(l._emojis.length>0&&"object"==typeof l._emojis){var t=[];l._content="",e.each(l._emojis,function(e,o){t.push(o.category)}),t=t.filter(function(e,t,o){return o.indexOf(e)===t}),e.each(t,function(t,o){l._content+='<h5 class="header-list">'+o+"</h5>",l._content+='<ul id="emoji-category-'+(t+1)+'" class="media-list">',e.each(l._emojis,function(e,t){t.category==o&&(l._content+='<li class="media"><a href="#" class="media-left" title="'+t.title+'">'+t.source+"</a></li>",l._content+='<li class="media"><a href="#" class="media-left" title="'+t.title+'">'+t.source+"</a></li>",l._content+='<li class="media"><a href="#" class="media-left" title="'+t.title+'">'+t.source+"</a></li>",l._content+='<li class="media"><a href="#" class="media-left" title="'+t.title+'">'+t.source+"</a></li>",l._content+='<li class="media"><a href="#" class="media-left" title="'+t.title+'">'+t.source+"</a></li>",l._content+='<li class="media"><a href="#" class="media-left" title="'+t.title+'">'+t.source+"</a></li>",l._content+='<li class="media"><a href="#" class="media-left" title="'+t.title+'">'+t.source+"</a></li>",l._content+='<li class="media"><a href="#" class="media-left" title="'+t.title+'">'+t.source+"</a></li>",l._content+='<li class="media"><a href="#" class="media-left" title="'+t.title+'">'+t.source+"</a></li>",l._content+='<li class="media"><a href="#" class="media-left" title="'+t.title+'">'+t.source+"</a></li>",l._content+='<li class="media"><a href="#" class="media-left" title="'+t.title+'">'+t.source+"</a></li>",l._content+='<li class="media"><a href="#" class="media-left" title="'+t.title+'">'+t.source+"</a></li>")}),l._content+="</ul>"})}},2e3)}else l._config.debug&&console.error("Option `emojiList` must be configured",a.emojiList)}else l._config.debug&&console.error("Option `input` must be configured",l._$input)}return t(i,{element:{value:function(){return this._$element}},input:{value:function(){return this._$input}}},{Default:{get:function(){return n}},_jQueryInterface:{value:function(t){var o=this;return t=t||{},o.each(function(){var n=e(o),a=e.extend({},i.Default,n.data(),"object"==typeof t&&t);new i(o,a)})}}}),i}();e.fn.emojipicker=a._jQueryInterface,e.fn.emojipicker.Constructor=a,e.fn.emojipicker.noConflict=function(){return e.fn.emojipicker=i,a._jQueryInterface}}(jQuery)}(jQuery);
//# sourceMappingURL=emojipicker.js.map